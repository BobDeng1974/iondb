/********************************************************************/
/*			  Code generated by IinqExecute.java				  */
/********************************************************************/

#if !defined(IINQ_USER_FUNCTIONS_H_)
#define IINQ_USER_FUNCTIONS_H_

#if defined(__cplusplus)
extern "C" {
#endif

#include <limits.h>
#include "../../../../dictionary/dictionary_types.h"
#include "../../../../dictionary/dictionary.h"
#include "../../../iinq.h"
#include "../../../iinq_interface/iinq_functions.h"

#define IINQ_DEBUG 1

typedef struct iinq_table_scan iinq_table_scan_t;

struct iinq_table_scan {
	iinq_query_operator_parent_t	super;
	ion_dictionary_t				dictionary;
	ion_dictionary_handler_t		handler;
	ion_dict_cursor_t				*cursor;
	ion_predicate_t					predicate;
	ion_record_t					record;
};

typedef struct iinq_external_sort iinq_external_sort_t;

struct iinq_external_sort {
	iinq_query_operator_parent_t	super;
	ion_external_sort_t				*es;
	char							*buffer;
	char							*record_buf;
	ion_external_sort_cursor_t		*cursor;
};

typedef struct iinq_projection iinq_projection_t;

struct iinq_projection {
	iinq_query_operator_parent_t	super;
	iinq_field_num_t				*input_field_nums;
};

void iinq_external_sort_destroy (iinq_query_operator_t **operator);
								 size_t
								 iinq_calculate_offset(
									 iinq_table_id_t	table_id,
									 iinq_field_num_t	field_num
								 );

								 ion_boolean_t iinq_projection_next (iinq_query_operator_t * operator);
																	 ion_err_t iinq_execute_prepared(iinq_prepared_sql * p);
																	 size_t iinq_calculate_key_offset(iinq_table_id_t table_id, iinq_field_num_t field_num);
																	 iinq_query_operator_t *iinq_projection_init(iinq_query_operator_t * input_operator, iinq_field_num_t num_fields, iinq_field_num_t * field_nums);
																	 void iinq_projection_destroy (iinq_query_operator_t **operator);
																								   ion_boolean_t iinq_table_scan_next (iinq_query_operator_t * operator);
																																	   ion_err_t iinq_print_keys(iinq_table_id_t table_id);
																																	   ion_err_t drop_table(iinq_table_id_t table_id);
																																	   iinq_query_operator_t *iinq_table_scan_init(iinq_table_id_t table_id, iinq_field_num_t num_fields);
																																	   ion_boolean_t iinq_external_sort_next (iinq_query_operator_t * operator);
																																											  void iinq_set_param(iinq_prepared_sql * p, iinq_field_num_t field_num, ion_value_t val);
																																											  ion_boolean_t iinq_is_key_field(iinq_table_id_t table_id, iinq_field_num_t field_num);
																																											  void iinq_table_scan_destroy (iinq_query_operator_t **operator);
																																																			iinq_field_t iinq_get_field_type(iinq_table_id_t tableId, iinq_field_num_t field_num);
																																																			ion_err_t iinq_print_table(iinq_table_id_t table_id);
																																																			ion_err_t create_table(iinq_table_id_t table_id, ion_key_type_t keyType, ion_key_size_t keySize, ion_value_size_t value_size);
																																																			iinq_query_operator_t *iinq_external_sort_init(iinq_query_operator_t * input_operator, int num_orderby, iinq_order_by_field_t * order_by_fields);
																																																			iinq_prepared_sql *iinq_insert_0(int *value_1, char *value_2, int *value_3);

#if defined(__cplusplus)
																																																			}
#endif

#endif
